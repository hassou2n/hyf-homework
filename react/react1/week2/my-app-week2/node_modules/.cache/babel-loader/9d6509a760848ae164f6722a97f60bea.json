{"ast":null,"code":"var _jsxFileName = \"/Users/husseinkhaleefah/Desktop/hyf-homework/react/react1/week2/my-app-week2/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport todoList from './TodoList'; // function TodoItem(props) {\n//     const [isSelected, setisSelected] = useState(props);\n//     const handleChange = () => {\n//         setisSelected(propsIs => {\n//             return !propsIs\n//         })\n//     }\n//     return (\n//         <li>\n//             <h3>\n//                 *\n//                 <span>\n//                     {props.description}\n//                 </span>\n//                 <input type=\"checkbox\" id=\"isSelected\"></input>\n//                 <label for=\"isSelected\" checked={isSelected} onChange={handleChange}></label>\n//                 <button onClick={() => {\n//                     props.setTodoState((propsIs) => {\n//                         return propsIs.filter(paramete => paramete.id !== props.id)\n//                     })\n//                 }}>\n//                     Delete\n//                 </button>\n//             </h3>\n//         </li>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDo() {\n  _s();\n\n  const [todoState, setTodoState] = useState(todoList);\n\n  const addTodo = () => {\n    const newId = todoState.length === 0 ? 1 : todoState[todoState.length - 1].id + 1;\n    const newTodo = {\n      id: newId,\n      description: \"random text\",\n      isSelected: false\n    };\n    setTodoState(prevTodos => {\n      return [...prevTodos, newTodo];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), todoState.length === 0 ? \"No items...\" : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoState.map(todo => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          description: todo.description,\n          isSelected: todo.isSelected,\n          id: todo.id,\n          setTodoState: setTodoState\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDo, \"pEveQFZtFrEmyj290/dJEehXyos=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","todoList","ToDo","todoState","setTodoState","addTodo","newId","length","id","newTodo","description","isSelected","prevTodos","map","todo"],"sources":["/Users/husseinkhaleefah/Desktop/hyf-homework/react/react1/week2/my-app-week2/src/components/Todo.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport todoList from './TodoList'\n\n// function TodoItem(props) {\n//     const [isSelected, setisSelected] = useState(props);\n//     const handleChange = () => {\n//         setisSelected(propsIs => {\n//             return !propsIs\n//         })\n//     }\n    \n    \n//     return (\n//         <li>\n//             <h3>\n//                 *\n//                 <span>\n//                     {props.description}\n//                 </span>\n//                 <input type=\"checkbox\" id=\"isSelected\"></input>\n//                 <label for=\"isSelected\" checked={isSelected} onChange={handleChange}></label>\n//                 <button onClick={() => {\n//                     props.setTodoState((propsIs) => {\n//                         return propsIs.filter(paramete => paramete.id !== props.id)\n//                     })\n//                 }}>\n//                     Delete\n//                 </button>\n//             </h3>\n//         </li>\n//     )\n// }\n\nfunction ToDo() {\n    const [todoState, setTodoState] = useState(todoList)\n\n    const addTodo = () => {\n        const newId = todoState.length === 0 ? 1 : todoState[todoState.length-1].id + 1\n        const newTodo = { id: newId, description: \"random text\", isSelected: false}\n        setTodoState(prevTodos => {\n            return [...prevTodos, newTodo]\n        })\n    }\n\n    return (\n        <div>\n            <button onClick={addTodo}>Add Todo</button>\n            {todoState.length === 0 ? \"No items...\" : (\n                <ul>\n                    {todoState.map(todo => {\n                        return <TodoItem\n                            description={todo.description}\n                            isSelected={todo.isSelected}\n                            key={todo.id}\n                            id={todo.id}\n                            setTodoState={setTodoState} />\n                    })}\n                </ul>)}\n        </div>\n    ) \n    }\n\n\nexport default ToDo;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACZ,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAACC,QAAD,CAA1C;;EAEA,MAAMI,OAAO,GAAG,MAAM;IAClB,MAAMC,KAAK,GAAGH,SAAS,CAACI,MAAV,KAAqB,CAArB,GAAyB,CAAzB,GAA6BJ,SAAS,CAACA,SAAS,CAACI,MAAV,GAAiB,CAAlB,CAAT,CAA8BC,EAA9B,GAAmC,CAA9E;IACA,MAAMC,OAAO,GAAG;MAAED,EAAE,EAAEF,KAAN;MAAaI,WAAW,EAAE,aAA1B;MAAyCC,UAAU,EAAE;IAArD,CAAhB;IACAP,YAAY,CAACQ,SAAS,IAAI;MACtB,OAAO,CAAC,GAAGA,SAAJ,EAAeH,OAAf,CAAP;IACH,CAFW,CAAZ;EAGH,CAND;;EAQA,oBACI;IAAA,wBACI;MAAQ,OAAO,EAAEJ,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKF,SAAS,CAACI,MAAV,KAAqB,CAArB,GAAyB,aAAzB,gBACG;MAAA,UACKJ,SAAS,CAACU,GAAV,CAAcC,IAAI,IAAI;QACnB,oBAAO,QAAC,QAAD;UACH,WAAW,EAAEA,IAAI,CAACJ,WADf;UAEH,UAAU,EAAEI,IAAI,CAACH,UAFd;UAIH,EAAE,EAAEG,IAAI,CAACN,EAJN;UAKH,YAAY,EAAEJ;QALX,GAGEU,IAAI,CAACN,EAHP;UAAA;UAAA;UAAA;QAAA,QAAP;MAMH,CAPA;IADL;MAAA;MAAA;MAAA;IAAA,QAHR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBC;;GA3BIN,I;;KAAAA,I;AA8BT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}