{"ast":null,"code":"var _jsxFileName = \"/Users/husseinkhaleefah/Desktop/hyf-homework/react/react1/week2/my-app-week2/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport todoList from './TodoList'; // function TodoItem(props) {\n//     const [isSelected, setisSelected] = useState(props);\n//     const handleChange = () => {\n//         setisSelected(propsIs => {\n//             return !propsIs\n//         })\n//     }\n//     return (\n//         <li>\n//             <h3>\n//                 *\n//                 <span>\n//                     {props.description}\n//                 </span>\n//                 <input type=\"checkbox\" id=\"isSelected\"></input>\n//                 <label for=\"isSelected\" checked={isSelected} onChange={handleChange}></label>\n//                 <button onClick={() => {\n//                     props.setTodoState((propsIs) => {\n//                         return propsIs.filter(paramete => paramete.id !== props.id)\n//                     })\n//                 }}>\n//                     Delete\n//                 </button>\n//             </h3>\n//         </li>\n//     )\n// }\n// function ToDo() {\n//     const [todoState, setTodoState] = useState(todoList)\n//     const addTodo = () => {\n//         const newId = todoState.length === 0 ? 1 : todoState[todoState.length-1].id + 1\n//         const newTodo = { id: newId, description: \"random text\", isSelected: false}\n//         setTodoState(prevTodos => {\n//             return [...prevTodos, newTodo]\n//         })\n//     }\n//     return (\n//         <div>\n//             <button onClick={addTodo}>Add Todo</button>\n//             {todoState.length === 0 ? \"No items...\" : (\n//                 <ul>\n//                     {todoState.map(todo => {\n//                         return <TodoItem\n//                             description={todo.description}\n//                             isSelected={todo.isSelected}\n//                             key={todo.id}\n//                             id={todo.id}\n//                             setTodoState={setTodoState} />\n//                     })}\n//                 </ul>)}\n//         </div>\n//     ) \n//     }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getClassName(isSelected) {\n  return isSelected ? 'todoItemSelected' : 'todoItem';\n}\n\nfunction TodoItem(_ref) {\n  let {\n    todo,\n    handleClickProp\n  } = _ref;\n  // const [isSelected, setIsSelected] = useState(false);\n  // function handleClick() {\n  // setIsSelected(!isSelected);\n  // }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: getClassName(todo.isSelected),\n    onClick: () => handleClickProp(todo.id),\n    children: [todo.id, \": \", todo.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n}\n\n_c = TodoItem;\n\nfunction ToDo() {\n  _s();\n\n  const [todos, setTodos] = useState(todoList);\n\n  function handleClick(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.isSelected = !todo.isSelected;\n    setTodos(newTodos);\n  }\n\n  const addTodo = () => {\n    const todoId = todos.length === 0 ? 1 : todos[todos.length - 1].id + 1;\n    setTodos([...todos, {\n      id: todoId,\n      text: `Learn React ${todoId}`,\n      isSelected: false\n    }]);\n  };\n\n  const deleteSelectedTodo = () => {\n    // const newTodos = [...todos];\n    // newTodos.splice(id, 1);\n    // setTodos(newTodos);\n    const newTodos = todos.filter(todo => todo.isSelected === false);\n    setTodos(newTodos);\n  };\n\n  const clearTodoState = () => {\n    const newTodos = todos.map(todo => !!todo.isSelected);\n    console.log(43, newTodos);\n    return newTodos;\n  };\n\n  const reloadTodo = () => {\n    clearTodoState();\n    setTodos(todoList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }, this), todos.length === 0 ? \"No items...\" : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          description: todo.description,\n          isSelected: todo.isSelected,\n          id: todo.id,\n          handleClickProp: handleClick\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 40\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 17\n  }, this);\n}\n\n_s(ToDo, \"35B+JBWQSCpjElhggfBfyBPjyVM=\");\n\n_c2 = ToDo;\nexport default ToDo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoItem\");\n$RefreshReg$(_c2, \"ToDo\");","map":{"version":3,"names":["React","useState","todoList","getClassName","isSelected","TodoItem","todo","handleClickProp","id","text","ToDo","todos","setTodos","handleClick","newTodos","find","addTodo","todoId","length","deleteSelectedTodo","filter","clearTodoState","map","console","log","reloadTodo","description"],"sources":["/Users/husseinkhaleefah/Desktop/hyf-homework/react/react1/week2/my-app-week2/src/components/Todo.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport todoList from './TodoList'\n\n// function TodoItem(props) {\n//     const [isSelected, setisSelected] = useState(props);\n//     const handleChange = () => {\n//         setisSelected(propsIs => {\n//             return !propsIs\n//         })\n//     }\n    \n    \n//     return (\n//         <li>\n//             <h3>\n//                 *\n//                 <span>\n//                     {props.description}\n//                 </span>\n//                 <input type=\"checkbox\" id=\"isSelected\"></input>\n//                 <label for=\"isSelected\" checked={isSelected} onChange={handleChange}></label>\n//                 <button onClick={() => {\n//                     props.setTodoState((propsIs) => {\n//                         return propsIs.filter(paramete => paramete.id !== props.id)\n//                     })\n//                 }}>\n//                     Delete\n//                 </button>\n//             </h3>\n//         </li>\n//     )\n// }\n\n// function ToDo() {\n//     const [todoState, setTodoState] = useState(todoList)\n\n//     const addTodo = () => {\n//         const newId = todoState.length === 0 ? 1 : todoState[todoState.length-1].id + 1\n//         const newTodo = { id: newId, description: \"random text\", isSelected: false}\n//         setTodoState(prevTodos => {\n//             return [...prevTodos, newTodo]\n//         })\n//     }\n\n//     return (\n//         <div>\n//             <button onClick={addTodo}>Add Todo</button>\n//             {todoState.length === 0 ? \"No items...\" : (\n//                 <ul>\n//                     {todoState.map(todo => {\n//                         return <TodoItem\n//                             description={todo.description}\n//                             isSelected={todo.isSelected}\n//                             key={todo.id}\n//                             id={todo.id}\n//                             setTodoState={setTodoState} />\n//                     })}\n//                 </ul>)}\n//         </div>\n//     ) \n//     }\n\n\n\nfunction getClassName(isSelected) {\n    return isSelected ? 'todoItemSelected' : 'todoItem';\n  }\n  \nfunction TodoItem({ todo, handleClickProp }) {\n    // const [isSelected, setIsSelected] = useState(false);\n    // function handleClick() {\n    // setIsSelected(!isSelected);\n    // }\n    return (\n      <li\n        className={getClassName(todo.isSelected)}\n        onClick={() => handleClickProp(todo.id)}\n      >\n        {todo.id}: {todo.text}\n      </li>\n    );\n  }\n  \nfunction ToDo() {\n    const [todos, setTodos] = useState(todoList);\n  \n    function handleClick(id) {\n      const newTodos = [...todos];\n      const todo = newTodos.find((todo) => todo.id === id);\n      todo.isSelected = !todo.isSelected;\n      setTodos(newTodos);\n    }\n  \n    const addTodo = () => {\n      const todoId = todos.length === 0 ? 1 : todos[todos.length - 1].id + 1;\n  \n      setTodos([\n        ...todos,\n        {\n          id: todoId,\n          text: `Learn React ${todoId}`,\n          isSelected: false,\n        },\n      ]);\n    };\n  \n    const deleteSelectedTodo = () => {\n      // const newTodos = [...todos];\n      // newTodos.splice(id, 1);\n      // setTodos(newTodos);\n      const newTodos = todos.filter((todo) => todo.isSelected === false);\n      setTodos(newTodos);\n    };\n  \n    const clearTodoState = () => {\n      const newTodos = todos.map((todo) => !!todo.isSelected);\n      console.log(43, newTodos);\n      return newTodos;\n    };\n  \n    const reloadTodo = () => {\n      clearTodoState();\n      setTodos(todoList);\n    };\n\n    return (\n                <div>\n                    <button onClick={addTodo}>Add Todo</button>\n                    {todos.length === 0 ? \"No items...\" : (\n                        <ul>\n                            {todos.map(todo => {\n                                return <TodoItem\n                                    description={todo.description}\n                                    isSelected={todo.isSelected}\n                                    key={todo.id}\n                                    id={todo.id}\n                                    handleClickProp={handleClick} />\n                            })}\n                        </ul>)}\n                </div>\n            ) \n    }\n\n\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module"}